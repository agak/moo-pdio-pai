/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JPanel;
import sys.FiltersListener;
import sys.TabData;
import sys.ViewsListener;

/**
 *
 * @author Lukasz
 */
public final class MainPanel extends javax.swing.JPanel implements PropertyChangeListener  {

    public TabData data;
    public JPanel columnpanel;

    /**
     * Creates new form MainPanel
     */
    public MainPanel(TabData data) {
        this.data = data;
        initComponents();

        this.data.getFiltersListener().setTaskPropertyChangeListener(this);
        this.data.getViews().addObservableListListener(new ViewsListener(this));

        JPanel borderlaoutpanel = new JPanel();
        this.jScrollPane.setViewportView(borderlaoutpanel);
        borderlaoutpanel.setLayout(new BorderLayout(0, 0));

        columnpanel = new JPanel();
        borderlaoutpanel.add(columnpanel, BorderLayout.NORTH);
        columnpanel.setLayout(new GridLayout(0, 1, 0, 1));
        columnpanel.setBackground(Color.gray);
        this.data.getChangeSupport().addPropertyChangeListener(navigableImagePanel);
        setSplit();
    }

    public void setSplit() {
        if (data.getViews().size() > 0) {
            this.remove(this.navigableImagePanel);
            jSplitPane.setLeftComponent(navigableImagePanel);
            this.add(this.jSplitPane, java.awt.BorderLayout.CENTER);
        } else {
            this.remove(this.jSplitPane);
            this.add(this.navigableImagePanel, java.awt.BorderLayout.CENTER);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane = new javax.swing.JSplitPane();
        navigableImagePanel = new gui.NavigableImagePanel();
        leftPanel = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        optionPanel = new javax.swing.JPanel();
        zoomLabel = new javax.swing.JLabel();
        hqLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        setLayout(new java.awt.BorderLayout());

        jSplitPane.setDividerLocation(300);
        jSplitPane.setResizeWeight(1.0);
        jSplitPane.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jSplitPaneComponentResized(evt);
            }
        });

        navigableImagePanel.setHighQualityRenderingEnabled(false);
        navigableImagePanel.setMinimumSize(new java.awt.Dimension(200, 200));
        navigableImagePanel.setPreferredSize(new java.awt.Dimension(400, 459));
        navigableImagePanel.setZoomIncrement(0.3);
        navigableImagePanel.setZoomNavigableImageEnable(false);
        navigableImagePanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                navigableImagePanelMouseWheelMoved(evt);
            }
        });
        navigableImagePanel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                navigableImagePanelPropertyChange(evt);
            }
        });

        javax.swing.GroupLayout navigableImagePanelLayout = new javax.swing.GroupLayout(navigableImagePanel);
        navigableImagePanel.setLayout(navigableImagePanelLayout);
        navigableImagePanelLayout.setHorizontalGroup(
            navigableImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 299, Short.MAX_VALUE)
        );
        navigableImagePanelLayout.setVerticalGroup(
            navigableImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 459, Short.MAX_VALUE)
        );

        jSplitPane.setLeftComponent(navigableImagePanel);

        leftPanel.setMaximumSize(new java.awt.Dimension(300, 0));
        leftPanel.setMinimumSize(new java.awt.Dimension(300, 0));
        leftPanel.setPreferredSize(new java.awt.Dimension(300, 459));
        leftPanel.setLayout(new java.awt.BorderLayout());
        leftPanel.add(jScrollPane, java.awt.BorderLayout.CENTER);

        jSplitPane.setRightComponent(leftPanel);

        add(jSplitPane, java.awt.BorderLayout.CENTER);

        optionPanel.setMaximumSize(new java.awt.Dimension(32767, 25));
        optionPanel.setMinimumSize(new java.awt.Dimension(0, 25));
        optionPanel.setPreferredSize(new java.awt.Dimension(715, 25));

        zoomLabel.setBackground(new java.awt.Color(204, 204, 204));
        zoomLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        zoomLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/zoom.png"))); // NOI18N
        zoomLabel.setText("100%");
        zoomLabel.setMaximumSize(new java.awt.Dimension(100, 25));
        zoomLabel.setMinimumSize(new java.awt.Dimension(100, 25));
        zoomLabel.setPreferredSize(new java.awt.Dimension(100, 25));
        zoomLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                zoomLabelMouseClicked(evt);
            }
        });

        hqLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        hqLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pixelize.png"))); // NOI18N
        hqLabel.setText("LQ");
        hqLabel.setMaximumSize(new java.awt.Dimension(100, 25));
        hqLabel.setMinimumSize(new java.awt.Dimension(100, 25));
        hqLabel.setPreferredSize(new java.awt.Dimension(100, 25));
        hqLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hqLabelMouseClicked(evt);
            }
        });

        progressBar.setMaximumSize(new java.awt.Dimension(400, 20));
        progressBar.setMinimumSize(new java.awt.Dimension(100, 20));
        progressBar.setPreferredSize(new java.awt.Dimension(300, 20));

        javax.swing.GroupLayout optionPanelLayout = new javax.swing.GroupLayout(optionPanel);
        optionPanel.setLayout(optionPanelLayout);
        optionPanelLayout.setHorizontalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addComponent(zoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(hqLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        optionPanelLayout.setVerticalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(zoomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(hqLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        zoomLabel.getAccessibleContext().setAccessibleName("zoomLabel");

        add(optionPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void jSplitPaneComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSplitPaneComponentResized
        jSplitPane.setDividerLocation(jSplitPane.getSize().width
                - jSplitPane.getInsets().right
                - jSplitPane.getDividerSize()
                - 300);
    }//GEN-LAST:event_jSplitPaneComponentResized

    private void navigableImagePanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_navigableImagePanelMouseWheelMoved
    }//GEN-LAST:event_navigableImagePanelMouseWheelMoved

    private void zoomLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_zoomLabelMouseClicked
        this.navigableImagePanel.setZoom(1.0);
        this.navigableImagePanel.repaint();
    }//GEN-LAST:event_zoomLabelMouseClicked

    private void hqLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hqLabelMouseClicked
        this.navigableImagePanel.setHighQualityRenderingEnabled(!this.navigableImagePanel.isHighQualityRenderingEnabled());
        this.navigableImagePanel.repaint();
    }//GEN-LAST:event_hqLabelMouseClicked

    private void navigableImagePanelPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_navigableImagePanelPropertyChange
        if (NavigableImagePanel.ZOOM_LEVEL_CHANGED_PROPERTY.equals(evt.getPropertyName())) {
            this.zoomLabel.setText(this.navigableImagePanel.getZoom() * 100 + "%");
        }
        if (NavigableImagePanel.QUALITY_LEVEL_CHANGED_PROPERTY.equals(evt.getPropertyName())) {
            this.hqLabel.setText((Boolean) evt.getNewValue() ? "HQ" : "LQ");
        }
    }//GEN-LAST:event_navigableImagePanelPropertyChange

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
        this.navigableImagePanel.setImage(data.getFilteredImage());
    }//GEN-LAST:event_formComponentAdded
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel hqLabel;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JSplitPane jSplitPane;
    private javax.swing.JPanel leftPanel;
    public gui.NavigableImagePanel navigableImagePanel;
    private javax.swing.JPanel optionPanel;
    public javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel zoomLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            int progress = (Integer) evt.getNewValue();
            progressBar.setValue(progress);
            if (progress >= 100) {
                progressBar.setValue(0);
            }
        }
    }
}
