/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.image.BufferedImage;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import sys.Messages;
import sys.TabData;

/**
 *
 * @author Lukasz
 */
public class DiffViewPanel extends javax.swing.JPanel implements PropertyChangeListener{
    private TabData data;
    private BufferedImage baseImage;
    DiffWorker workerBase;
    
    /**
     * Creates new form DiffViewPanel
     */
    public DiffViewPanel() {
        initComponents();
    }

    DiffViewPanel(TabData data) {
        this();
        this.data = data;
        this.data.getChangeSupport().addPropertyChangeListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        openFileChooser = new javax.swing.JFileChooser();
        imagePanel = new javax.swing.JPanel();
        loadButton = new javax.swing.JButton();
        fileNameLabel = new javax.swing.JLabel();
        valuePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();

        openFileChooser.setDialogTitle("Open file");
        openFileChooser.setFileFilter(new components.ImageFilter());
        openFileChooser.setFileView(new components.ImageFileView());

        setLayout(new java.awt.BorderLayout());

        imagePanel.setMaximumSize(new java.awt.Dimension(32767, 30));
        imagePanel.setMinimumSize(new java.awt.Dimension(100, 30));
        imagePanel.setPreferredSize(new java.awt.Dimension(400, 30));

        loadButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/open_image.png"))); // NOI18N
        loadButton.setText("Load");
        loadButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        loadButton.setPreferredSize(new java.awt.Dimension(51, 25));
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fileNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addContainerGap())
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanelLayout.createSequentialGroup()
                .addGap(0, 5, Short.MAX_VALUE)
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        add(imagePanel, java.awt.BorderLayout.PAGE_START);

        jLabel1.setText("MSE");

        jLabel2.setText("MAE");

        jLabel3.setText("PMSE");

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Start image", "End image"
            }
        ));
        resultTable.setRowHeight(27);
        jScrollPane1.setViewportView(resultTable);

        javax.swing.GroupLayout valuePanelLayout = new javax.swing.GroupLayout(valuePanel);
        valuePanel.setLayout(valuePanelLayout);
        valuePanelLayout.setHorizontalGroup(
            valuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valuePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(valuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
                .addContainerGap())
        );
        valuePanelLayout.setVerticalGroup(
            valuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(valuePanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(valuePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(valuePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        add(valuePanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
       int returnVal = this.openFileChooser.showDialog(this, "Open file");
        //Process the results.
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = this.openFileChooser.getSelectedFile();
            try {
                baseImage = ImageIO.read(file);
                if(baseImage.getHeight() != data.getBaseImage().getHeight() ||baseImage.getWidth() != data.getBaseImage().getWidth())
                {
                    baseImage = null;
                    Messages.info("Rozmiar obrazka nie zgadza się z obrazem początkowym");
                    return;
                }
                this.fileNameLabel.setText(file.getAbsolutePath());
                DiffWorker worker = new DiffWorker(baseImage,data.getBaseImage(),this.resultTable,0);
                worker.run();
                if(baseImage.getHeight() != data.getFilteredImage().getHeight() ||baseImage.getWidth() != data.getFilteredImage().getWidth())
                {
                    baseImage = null;
                    Messages.info("Rozmiar obrazka nie zgadza się z obrazem końcowym");
                    return;
                }
                DiffWorker worker2 = new DiffWorker(baseImage,data.getFilteredImage(),this.resultTable,1);
                worker2.run();
            } catch (IOException ex) {
                Messages.error("Błąd odczytu pliku. " + ex.getMessage());
            }
        }
       
        this.openFileChooser.setSelectedFile(null);
    }//GEN-LAST:event_loadButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadButton;
    private javax.swing.JFileChooser openFileChooser;
    private javax.swing.JTable resultTable;
    private javax.swing.JPanel valuePanel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("filteredImage".equals(evt.getPropertyName())) {
            if(baseImage!=null){
                DiffWorker worker = new DiffWorker(baseImage,data.getFilteredImage(),this.resultTable,1);
                 worker.run();
            }
        }
    }
}
